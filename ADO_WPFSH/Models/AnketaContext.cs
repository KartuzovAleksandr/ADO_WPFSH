// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.Configuration;
using Microsoft.EntityFrameworkCore;

namespace ADO_WPFSH.Models;

public partial class AnketaContext : DbContext
{
    String provider = "SQLite";
    public AnketaContext(String provider)
    {
        this.provider = provider;
    }
    public AnketaContext()
    {
    }
    public AnketaContext(DbContextOptions<AnketaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Country> Countries { get; set; }

    public virtual DbSet<Education> Educations { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<Qualify> Qualifies { get; set; }

    public virtual DbSet<Region> Regions { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        switch (provider)
        {
            case "SQLite":
                optionsBuilder.UseSqlite(ConfigurationManager.ConnectionStrings["Anketa_SQLite"].
                           ConnectionString);
                break;
            case "SqlServer":
                optionsBuilder.UseSqlServer(ConfigurationManager.ConnectionStrings["Anketa_Express"].
                                            ConnectionString);
                break;
            default:
                optionsBuilder.UseSqlite(ConfigurationManager.ConnectionStrings["Anketa_SQLite"].
                           ConnectionString);
                break;
        }
    }
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Country>(entity =>
        {
            entity.Property(e => e.id).ValueGeneratedNever();
        });

        modelBuilder.Entity<Education>(entity =>
        {
            entity.Property(e => e.id).ValueGeneratedNever();
            entity.Property(e => e.Name).IsFixedLength();
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.Property(e => e.Tab).ValueGeneratedNever();
            entity.Property(e => e.CountryId).HasDefaultValue(1);
            entity.Property(e => e.EducationId).HasDefaultValue(1);
            entity.Property(e => e.QualifyId).HasDefaultValue(1);
            entity.Property(e => e.RegionCode).HasDefaultValue(50);
        });

        modelBuilder.Entity<Qualify>(entity =>
        {
            entity.Property(e => e.id).ValueGeneratedNever();
            entity.Property(e => e.Number).IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}